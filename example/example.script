

local function setguiimage(self, goname, width, height )

	local buffer = buffer.create( width * height, { {name=hash("rgba"), type=buffer.VALUE_TYPE_UINT8, count=4 } })
		local res = { buffer = buffer, type = "rgba", width = width, height = height }
	res.type=resource.TEXTURE_TYPE_2D	
	res.num_mip_maps=1
	res.format = resource.TEXTURE_FORMAT_RGBA

	self.resource_path = go.get(goname, "texture0")
	res.image_buffer = buffer
	resource.set_texture( self.resource_path, res, buffer )
	self.guibuffer = buffer
	self.res = res
end
	
function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("camera", "acquire_camera_focus")
	
	local s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local reverse_s = ugui.reverse(s)
	print(reverse_s) --> ZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba

	setguiimage(self, "/ugui#display", 512, 512)

	ugui.init(512, 512)
	ugui.setfont(0)
	self.window = ugui.windowcreate()
	ugui.settext(self.window, 1, 0, "Window 1")
	
	self.btn1 	= ugui.buttoncreate(self.window, 1, 10, 10, 100, 50)
	ugui.settext(self.window, 1, 1, "Button 1")

	self.btn2 	= ugui.buttoncreate(self.window, 2, 10, 80, 100, 50)
	ugui.settext(self.window, 2, 1, "Button 2")

	self.btn3 	= ugui.buttoncreate(self.window, 3, 10, 150, 100, 50)
	ugui.settext(self.window, 3, 1, "Button 3")
	ugui.windowshow(self.window)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	ugui.update()
	ugui.updatebufferbytes(self.guibuffer, "rgba");
	resource.set_texture( self.resource_path, self.res, self.guibuffer )
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Check some keys - 1, 2, 3 for profiling
	if(action.released) then 
		if action_id == hash("zero") then
			self.profile = not self.profile
			profiler.enable_ui(self.profile)
		end 
		if action_id == hash("one") then
			profiler.set_ui_mode(profiler.MODE_RUN)
		end 
		if action_id == hash("two") then
			profiler.set_ui_mode(profiler.MODE_PAUSE)
		end
		if action_id == hash("three") then
			profiler.set_ui_mode(profiler.MODE_RECORD)
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
